stages:
  - build
  - test

build:linux:
  image: asherd/veruscoin-cross-compiler:linux
  variables:
    DOCKER_DRIVER: overlay2
  stage: build
  cache:
    key: ${CI_JOB_NAME}
    paths:
    - depends/built
    - .ccache
    - .zcash-params
  before_script:
    - mkdir .ccache  || echo ccache exists
    - ln -s $PWD/.ccache /root/.ccache
    - mkdir .zcash-params || echo zcash-params exists
    - ln -s $PWD/.zcash-params /root/.zcash-params

  script:
    - "./zcutil/fetch-params.sh"
    - "./zcutil/build.sh"
    - "cp src/komodod src/komodo-cli kmd/linux/verus-cli && chmod -R +x kmd/linux/verus-cli/"
  artifacts:
    paths:
    - kmd/linux/verus-cli
    expire_in: 1 week

build:windows:
  image: asherd/veruscoin-cross-compiler:latest
  variables:
    DOCKER_DRIVER: overlay2
  stage: build
  cache:
    key: ${CI_JOB_NAME}
    paths:
    - depends/built
    - .ccache
    - .cargo
    - .zcash-params
  before_script:
    - mkdir .ccache  || echo ccache exists
    - ln -s $PWD/.ccache /root/.ccache
    - mkdir .zcash-params || echo zcash-params exists
    - ln -s $PWD/.zcash-params /root/.zcash-params
    - mkdir .cargo || echo .cargo exists
    - ln -s $PWD/.cargo /root/.cargo
  script:
    - "./zcutil/fetch-params.sh"
    - "./zcutil/build-win.sh"
    - "cp src/komodod.exe src/komodo-cli.exe src/komodo-tx.exe kmd/windows/verus-cli"
  artifacts:
    paths:
    - kmd/windows/verus-cli
    expire_in: 1 week

build:mac:
  stage: build
  tags: ["osx"]
  cache:
    key: ${CI_JOB_NAME}
    paths:
    - depends/built

  script:
    - "./zcutil/fetch-params.sh"
    - "./zcutil/build-mac.sh | xcpretty"
    - "./makeRelease.sh"
  artifacts:
    paths:
    - kmd/mac/verus-cli
    expire_in: 1 week

code_quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    paths: [gl-code-quality-report.json]

sast:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]
